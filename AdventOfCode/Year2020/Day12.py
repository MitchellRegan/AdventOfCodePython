#https://adventofcode.com/2020/day/12
#https://adventofcode.com/2020/day/12#part2
import math

# Real data
data = [['W',5],['R',90],['W',3],['F',98],['F',87],['R',90],['F',57],['R',180],['F',3],['L',90],['F',60],['N',3],['F',94],['N',3],['E',2],['S',2],['W',2],['L',90],['F',26],['R',90],['W',1],['F',58],['S',5],['F',22],['N',3],['F',95],['N',1],['W',1],['F',11],['R',180],['S',3],['R',270],['N',1],['N',1],['E',4],['S',3],['F',81],['W',2],['S',2],['L',90],['S',4],['R',90],['S',1],['E',1],['L',90],['S',4],['E',2],['F',72],['S',1],['W',1],['F',73],['W',4],['L',180],['S',1],['W',5],['S',5],['R',90],['E',3],['N',3],['F',28],['N',1],['F',84],['R',90],['E',5],['F',13],['W',5],['L',90],['F',11],['E',4],['F',63],['S',1],['S',2],['L',90],['N',3],['S',5],['F',20],['W',1],['S',4],['W',1],['S',2],['F',67],['N',1],['R',180],['F',11],['E',1],['R',90],['S',2],['R',90],['F',38],['S',5],['F',27],['S',5],['W',3],['S',3],['L',90],['N',2],['W',2],['S',1],['N',4],['R',90],['E',1],['F',16],['L',90],['E',4],['N',1],['L',90],['F',89],['E',5],['F',90],['E',1],['L',180],['N',1],['E',3],['S',2],['F',58],['S',3],['F',53],['R',90],['F',100],['W',1],['F',53],['W',5],['L',90],['W',3],['N',4],['F',54],['R',180],['S',2],['E',2],['F',63],['L',90],['S',4],['F',40],['F',90],['N',3],['F',83],['E',5],['F',35],['W',4],['W',5],['S',3],['E',2],['S',2],['S',1],['F',12],['L',90],['S',1],['F',41],['R',90],['S',3],['R',90],['F',66],['S',2],['F',34],['N',5],['R',90],['E',5],['R',90],['F',25],['N',5],['R',90],['W',1],['S',2],['S',2],['R',90],['E',3],['R',90],['F',95],['N',3],['W',2],['S',4],['R',90],['E',3],['L',90],['E',3],['R',90],['N',2],['F',84],['L',90],['N',2],['R',90],['S',1],['L',90],['F',93],['L',90],['F',60],['S',4],['F',85],['S',2],['F',84],['R',180],['W',5],['N',4],['W',5],['R',270],['S',2],['E',2],['L',180],['W',4],['R',180],['W',5],['F',56],['E',1],['F',45],['W',4],['R',90],['L',180],['S',1],['W',4],['S',5],['F',87],['R',180],['S',2],['F',76],['R',90],['F',76],['S',1],['E',4],['F',6],['S',1],['E',2],['F',47],['S',3],['W',2],['F',16],['F',75],['E',3],['F',75],['E',4],['R',90],['N',5],['W',3],['F',1],['S',1],['F',8],['E',2],['F',64],['R',90],['W',4],['S',5],['R',90],['N',5],['R',90],['E',2],['N',1],['E',1],['L',180],['F',31],['L',180],['E',5],['L',90],['N',3],['R',90],['F',77],['E',3],['F',65],['E',4],['R',90],['W',1],['N',3],['E',3],['F',4],['R',90],['E',3],['N',4],['F',28],['R',180],['N',2],['L',90],['S',2],['L',90],['N',1],['W',1],['L',180],['E',4],['F',51],['W',4],['F',9],['S',4],['R',90],['W',5],['S',4],['R',90],['E',3],['W',2],['F',44],['R',90],['E',1],['L',180],['S',4],['F',93],['S',2],['F',58],['R',90],['F',80],['L',90],['E',2],['F',20],['R',90],['F',19],['S',4],['F',22],['W',1],['S',2],['F',62],['N',2],['E',5],['F',21],['L',90],['F',16],['W',2],['F',58],['E',2],['F',54],['N',1],['F',83],['N',3],['E',2],['F',62],['S',3],['L',90],['E',3],['L',270],['F',29],['N',5],['L',90],['S',2],['F',19],['E',5],['R',180],['F',87],['R',180],['S',2],['F',22],['W',3],['S',5],['F',35],['E',3],['N',5],['R',180],['E',2],['R',270],['N',3],['F',5],['L',90],['W',3],['S',1],['L',90],['S',2],['R',270],['N',5],['L',180],['F',79],['N',3],['F',82],['N',3],['F',73],['N',4],['F',57],['L',90],['W',3],['F',26],['N',4],['E',5],['N',4],['F',48],['R',90],['F',62],['R',90],['F',36],['E',1],['F',76],['R',90],['N',3],['F',83],['E',5],['L',90],['S',1],['F',1],['E',1],['L',90],['F',67],['W',3],['L',90],['F',42],['E',4],['S',2],['L',180],['F',89],['N',1],['E',4],['S',4],['W',1],['S',2],['L',90],['F',91],['R',90],['F',78],['N',5],['F',29],['W',2],['R',90],['W',1],['R',90],['E',2],['F',40],['E',2],['F',76],['R',90],['E',4],['L',90],['W',3],['S',1],['W',3],['N',4],['F',81],['W',4],['F',22],['N',1],['W',1],['F',47],['E',3],['R',90],['N',5],['W',4],['L',90],['F',44],['L',90],['F',58],['S',1],['R',90],['E',3],['F',91],['N',1],['W',4],['N',5],['L',90],['F',60],['F',8],['S',4],['F',17],['E',5],['N',2],['L',90],['F',37],['L',180],['W',4],['L',180],['W',4],['F',93],['S',5],['F',71],['R',90],['N',5],['E',3],['F',20],['R',90],['N',5],['E',5],['R',90],['S',2],['R',180],['S',5],['L',90],['F',26],['E',4],['F',49],['E',5],['S',4],['E',4],['N',1],['L',180],['F',33],['E',1],['L',90],['S',4],['E',5],['N',5],['L',180],['F',60],['S',1],['F',53],['W',1],['F',34],['E',2],['N',3],['E',2],['S',5],['F',61],['F',32],['F',18],['L',90],['W',4],['N',4],['R',90],['E',4],['L',90],['F',26],['S',3],['W',4],['S',5],['E',5],['S',2],['R',90],['S',5],['R',90],['E',2],['R',90],['N',2],['S',3],['L',90],['S',3],['S',2],['L',90],['E',5],['F',31],['R',180],['E',2],['F',42],['R',90],['W',4],['L',90],['E',5],['S',3],['F',79],['R',90],['F',76],['W',1],['F',9],['N',1],['F',91],['R',90],['N',3],['F',32],['L',180],['N',4],['W',2],['F',18],['N',5],['L',90],['S',4],['L',180],['F',22],['E',4],['R',180],['S',2],['L',90],['W',5],['F',31],['L',180],['E',1],['F',15],['W',1],['S',5],['E',4],['F',56],['L',90],['F',7],['S',3],['E',4],['F',13],['R',90],['S',4],['F',78],['R',180],['E',3],['N',1],['R',90],['W',4],['F',29],['S',4],['L',90],['S',4],['W',4],['L',180],['F',6],['F',84],['E',4],['L',90],['F',29],['E',2],['F',75],['E',3],['N',4],['F',33],['L',270],['S',4],['F',62],['E',2],['N',4],['F',50],['E',1],['E',2],['L',270],['F',100],['R',180],['S',2],['F',89],['N',2],['W',3],['F',5],['E',5],['N',2],['F',75],['S',3],['F',2],['S',4],['W',3],['F',33],['S',5],['R',90],['E',5],['F',20],['S',1],['L',90],['S',4],['F',10],['W',5],['S',2],['L',90],['E',3],['E',1],['S',3],['F',41],['E',5],['L',90],['F',28],['S',2],['F',40],['S',2],['S',4],['N',1],['F',15],['W',5],['W',2],['R',270],['E',5],['R',90],['E',4],['F',50],['R',90],['S',4],['E',1],['N',4],['F',73],['L',90],['W',2],['L',270],['E',4],['S',1],['F',30],['S',3],['W',4],['L',180],['W',4],['F',6],['R',90],['F',43],['N',5],['W',3],['W',3],['R',90],['S',2],['R',90],['F',50],['W',2],['S',4],['L',90],['L',180],['W',1],['L',270],['E',3],['N',2],['E',2],['F',48],['W',1],['L',90],['N',4],['L',90],['E',3],['F',86],['L',180],['F',10],['S',1],['F',36],['S',4],['F',33],['N',5],['L',90],['F',14],['S',2],['E',4],['N',4],['R',90],['S',2],['W',2],['N',2],['L',180],['N',4],['R',90],['L',90],['E',5],['S',1],['F',82],['W',1],['S',1],['F',19],['E',3],['F',19],['S',2],['W',1],['F',18],['L',90],['F',43],['W',1],['N',2],['E',3],['L',90],['S',1],['F',75],['L',90],['E',4],['F',80],['N',5],['F',15],['F',53],['N',4],['E',5],['L',90],['E',1],['W',5],['R',270],['F',17],['F',63],['W',2],['F',20],['E',1],['S',3],['F',19],['E',1],['F',99],['S',1],['W',1],['F',23],['L',180],['S',3],['W',4],['F',76]]
# Test data
#data = [['F',10],['N',3],['F',7],['R',90],['F',11]]


def solution1():
    # Tracking the coordinates and rotation
    x = 0
    y = 0
    r = 0

    # Iterating through each instruction to update our position
    for ins in data:
        if ins[0] is 'F':
            x += (math.cos(math.radians(r)) * ins[1])
            y += (math.sin(math.radians(r)) * ins[1])
        elif ins[0] is 'L':
            r += ins[1]
        elif ins[0] is 'R':
            r -= ins[1]
        elif ins[0] is 'N':
            y += ins[1]
        elif ins[0] is 'S':
            y -= ins[1]
        elif ins[0] is 'E':
            x += ins[1]
        elif ins[0] is 'W':
            x -= ins[1]
    return abs(x) + abs(y)


def solution2():
    # Tracking the ship coordinates and waypoint coordinates
    xShip = 0
    yShip = 0
    xWay = 10
    yWay = 1

    # Iterating through each instruction to update our position
    for ins in data:
        if ins[0] is 'F':
            xShip += ins[1] * xWay
            yShip += ins[1] * yWay
        elif ins[0] is 'L':
            rad = math.radians(ins[1])
            newX = (math.cos(rad) * xWay) - (math.sin(rad) * yWay)
            newY = (math.sin(rad) * xWay) + (math.cos(rad) * yWay)
            xWay = newX
            yWay = newY
        elif ins[0] is 'R':
            rad = math.radians(-1 * ins[1])
            newX = (math.cos(rad) * xWay) - (math.sin(rad) * yWay)
            newY = (math.sin(rad) * xWay) + (math.cos(rad) * yWay)
            xWay = newX
            yWay = newY
        elif ins[0] is 'N':
            yWay += ins[1]
        elif ins[0] is 'S':
            yWay -= ins[1]
        elif ins[0] is 'E':
            xWay += ins[1]
        elif ins[0] is 'W':
            xWay -= ins[1]

    return abs(xShip) + abs(yShip)

    
print("Year 2020, Day 12 solution part 1:", solution1())
print("Year 2020, Day 12 solution part 2:", solution2())

